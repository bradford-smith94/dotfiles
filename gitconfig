# Bradford Smith
# ~/.gitconfig
# updated: 2018-08-23
#####################

[user]
    name = Bradford Smith
    # make git prompt for email before allowing commits, this forces me to
    # specify my email on a per-repo basis instead of globally
    useConfigOnly = true
[core]
    editor = vim
    excludesfile = ~/.gitignore
[merge]
    tool = vimdiff
[diff]
    tool = vimdiff
    colorMoved = plain
[difftool]
    prompt = false
[commit]
    # commits start with prefilled text provided in:
    template = ~/.gitmessage
[color]
    ui = auto
    branch = true
    diff = true
    interactive = true
    status = true
[color "diff"]
    oldMoved = blue
    newMoved = bold blue
    oldMovedAlternative = cyan
    newMovedAlternative = bold cyan
[color "status"]
    added = green
    changed = yellow
    untracked = red
[push]
    default = upstream
[log]
    decorate = short
    mailmap = true
[stash]
    showPatch = true
[alias]
    # show aliases (meta-aliases?)
    alias = "!git config --get-regexp 'alias.*' | colrm 1 6 | sed -e 's/[ ]/ = /' -e 's/[ ]\\+/ /g' | fmt -t"
    aliases = "!git alias"

    # alias for my git-summary helper
    # see: github.com/bradford-smith94/git-summary
    contributions ="!git summary"

    # from github.com/tsu-complete/dot/blob/master/git/_gitconfig
    graph = "log --graph --branches --remotes --tags --pretty='%w(76, 0, 6)%C(red)%h%C(reset) -%C(auto)%d%C(reset) %s%n %C(green)(%cr) %C(bold blue)<%aN>%C(reset)' --abbrev-commit --date=relative"
    shortgraph = "log --graph --branches --remotes --tags --pretty='%C(red)%h%C(reset)%C(auto)%d%C(reset) %s' --abbrev-commit"
    lines = "!git grep -z --cached -Il '' | xargs -0 wc -l"
    lines-authored = "!git grep -z --cached -Il '' | xargs -0 -n1 git blame --line-porcelain HEAD | grep \"^author \"|sort|uniq -c|sort -nr | awk '{lines[count++]=$0;sum+=$1}END{for(i=0;i<count;i++){ print lines[i] \" (\" lines[i]/sum*100 \"%)\"}}'"

    # log aliases
    # use after git pull to show a log of the new commits
    new = "!git log $1@{1}..$1@{0} \"$@\""
    newest = "log -1"
    # use to show commits from only today/yesterday
    today ="log --since=midnight"
    yesterday = "log --since=\"yesterday midnight\" --until=midnight"
    # log only commits that haven't been pushed to the upstream tracking branch
    unpushed = "log @{u}.."

    # show all of something, keep commands consistent in plain English
    authors = "shortlog -ns --no-merges"
    branches = "branch -avv"
    remotes = "remote -v"
    stashes = "stash list"
    tags = "tag --sort -taggerdate"

    # question aliases, whatis this commit, whoami (ignore 'useconfigonly'),
    # whois this other author
    whatis = "show"
    whoami = "!git config --get-regexp 'user.*' | colrm 1 5 | sed -e '/^useconfigonly.*$/d' -e 's/[ ]/ = /'"
    whois = "!sh -c 'git log -i -1 --pretty=\"tformat:%aN <%aE>\" --author=\"$1\"' -"

    # make a .mailmap file based on the shortlog
    mkmailmap = "!git shortlog -se | awk -F'\\t' '{print $2,$3,$2,$3}' | sort > .mailmap"

    # mostly for fun, destroy all git history
    nuke = "!git rev-parse --show-toplevel 2>&1 >/dev/null && rm -rf $(git rev-parse --show-toplevel)/.git"

    # for the rare occasion you want to stash _only_ unstaged changes
    stash-unstaged = "stash -k"

    # useful to navigate to repository root: `cd $(git top)`
    top = "rev-parse --show-toplevel"

    # stop git from tracking a file
    untrack = "rm --cached"
