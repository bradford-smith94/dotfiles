#!/bin/bash
# Bradford Smith
# ~/bin/git-summary
# 06/30/2017
# Print a summary of git author contributions

# shellcheck disable=2034
USAGE="[<author>]"

# shellcheck source=/dev/null
source "$(git --exec-path)/git-sh-setup"

require_work_tree

function _summary() {
    if [ -n "$1" ]; then
        #author provided
        AUTHORS=$(git log -i -1 --pretty="format:%aN" --author="$1")
        if [ -z "$AUTHORS" ]; then
            die "fatal: ambiguous argument '$1': unknown author."
        fi
    else
        #no author provided, run for all of them
        AUTHORS=$(git shortlog -n -s --no-merges | colrm 1 8)
    fi

    while read -r author; do
        commits=$(git log --no-merges --oneline --use-mailmap --author="$author" | wc -l | tr -d '\n')
        files=$(git log --no-merges --use-mailmap --author="$author" --name-only --pretty=format:"" | sort -u | sed '/^$/d' | wc -l | tr -d '\n')
        adds=$(git log --no-merges --use-mailmap --author="$author" --pretty=tformat: --numstat | awk '{ add+=$1 } END { printf "%s", add }')
        subs=$(git log --no-merges --use-mailmap --author="$author" --pretty=tformat: --numstat | awk '{ subs+=$2 } END { printf "%s", subs }')

        printf "%s: %s commits\n%s files changed, %s insertions(+), %s deletions(-)\n" \
            "$author" \
            "$(numfmt --grouping "$commits")" \
            "$(numfmt --grouping "$files")" \
            "$(numfmt --grouping "$adds")" \
            "$(numfmt --grouping "$subs")"

    done <<< "$AUTHORS"
}

_summary "$1"
